{"version":3,"sources":["Components/Nav/Nav.js","Components/Title/Title.js","Components/NavbarLink/Navbarlink.js","Components/Container/Container.js","Components/Card/Card.js","Pages/Search/Search.js","Utils/API/API.js","Pages/Saved/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","title","children","Title","class","NavbarLink","href","link","text","Container","Card","key","id","src","img","alt","authors","length","join","description","onClick","handleFunction","data-id","btnText","Search","_useState","useState","_useState2","Object","slicedToArray","searchedBooks","setSearchedBooks","searchRef","useRef","handleSaveBtn","e","stateIndex","target","getAttribute","i","console","log","accessInfo","data","newBook","googleId","volumeInfo","image","imageLinks","smallThumbnail","selfLink","axios","post","then","res","catch","err","Components_Nav_Nav","Navbarlink","Components_Title_Title","Components_Container_Container","ref","bookname","preventDefault","current","value","get","concat","response","items","map","book","Components_Card_Card","infoLink","Fragment","Saved","savedBooks","setSavedBooks","useEffect","handleDelete","delete","removeSavedBook","filtered","filter","_id","App","react_router_dom","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.59e34d02.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles.css';\r\n\r\nconst Nav = (props) => {\r\n    return(\r\n        <nav className='navbar'>\r\n            <h2>{props.title}</h2>\r\n            {props.children}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport './styles.css';\r\n\r\nconst Title = (props) => {\r\n    return(\r\n        <div className={props.class}>\r\n            <h1>React Google Books Search</h1>\r\n            <h4>Search for and save books of interest</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react'\r\nimport './styles.css';\r\n\r\nconst NavbarLink = (props) => {\r\n    return (\r\n        <a className='navbar-link' href={props.link}>{props.text}</a>\r\n    )\r\n}\r\n\r\nexport default NavbarLink;","import React from 'react'\r\n\r\nconst Container = (props) => {\r\n    return (\r\n        <div {...props} />\r\n    )\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='card' key={props.id}>\r\n            <div className='card-img'>\r\n                <img src={props.img} alt='book'></img>\r\n            </div>\r\n            <div className='card-info'>\r\n                <h2>Title: {props.title}</h2>\r\n                <h2>Author(s): {props.authors.length === 0 ? 'No authors found' : props.authors.join(', ')}</h2>\r\n                <p>Desciption: {props.description}</p>\r\n                <a href={props.link}>Google books</a>\r\n            </div>\r\n            <div className='card-btn'>\r\n                <button onClick={props.handleFunction} data-id={props.id}>{props.btnText}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useRef, useState } from 'react';\r\nimport './styles.css';\r\nimport Nav from '../../Components/Nav/Nav';\r\nimport Title from '../../Components/Title/Title';\r\nimport NavbarLink from '../../Components/NavbarLink/Navbarlink';\r\nimport Container from '../../Components/Container/Container';\r\nimport { searchGoogleBooks, saveABook } from '../../Utils/API/API';\r\nimport Card from '../../Components/Card/Card';\r\n\r\nconst Search = (props) => {\r\n    const [searchedBooks, setSearchedBooks] = useState([])\r\n    const searchRef = useRef();\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        searchGoogleBooks(searchRef.current.value)\r\n        .then(response => {\r\n            const data = response.data.items;\r\n            setSearchedBooks(data);\r\n        })\r\n    }\r\n\r\n    const handleSaveBtn = (e) => {\r\n        const id = e.target.getAttribute('data-id');\r\n        let stateIndex;\r\n        for(let i = 0; i < searchedBooks.length; i++){\r\n            console.log(searchedBooks[i].accessInfo.id, id)\r\n            if(searchedBooks[i].id === id){\r\n                stateIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        const newBook = {\r\n            googleId: id,\r\n            title: searchedBooks[stateIndex].volumeInfo.title,\r\n            authors: searchedBooks[stateIndex].volumeInfo.authors,\r\n            description: searchedBooks[stateIndex].volumeInfo.description,\r\n            image: searchedBooks[stateIndex].volumeInfo.imageLinks.smallThumbnail,\r\n            link: searchedBooks[stateIndex].selfLink,\r\n        }\r\n        saveABook(newBook)\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err));\r\n    }\r\n    return(\r\n        <div>\r\n            <Nav title='Google books search'>\r\n                <div>\r\n                <NavbarLink text='Search' link='/' />\r\n                <NavbarLink text='Saved' link='/saved' />\r\n\r\n                </div>\r\n            </Nav>\r\n            <Title />\r\n            <Container className='search-container'>\r\n                <form>\r\n                    <input ref={searchRef}></input>\r\n                    <button onClick={handleSearch}>Search</button>\r\n                </form>\r\n                {searchedBooks.length !== 0 ? searchedBooks.map(book => (\r\n                    <Card handleFunction={handleSaveBtn} btnText={'Save'} id={!('id' in book) ? 'no id' : book.id} title={!('title' in book.volumeInfo) ? 'No title found' : book.volumeInfo.title} authors={!('authors' in book.volumeInfo) ? [] : book.volumeInfo.authors} img={!('imageLinks' in book.volumeInfo) ? 'No image found' : book.volumeInfo.imageLinks.smallThumbnail} description={!('description' in book.volumeInfo) ? 'No description available' : book.volumeInfo.description} link={!('infoLink' in book.volumeInfo) ? 'no link available' : book.volumeInfo.infoLink }></Card>\r\n                )) : <> </>}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\nexport const getSavedBooks = () => {\r\n    return axios.get('/api/books');\r\n}\r\n\r\nexport const saveABook = (data) => {\r\n    return axios.post('/api/books', data);\r\n}\r\n\r\nexport const removeSavedBook = (id) => {\r\n    return axios.delete(`/api/books/${id}`)\r\n}\r\n\r\nexport const searchGoogleBooks = (bookname) => {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${bookname}`);\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Nav from '../../Components/Nav/Nav';\r\nimport NavbarLink from '../../Components/NavbarLink/Navbarlink';\r\nimport { getSavedBooks, removeSavedBook } from '../../Utils/API/API';\r\nimport Container from '../../Components/Container/Container';\r\nimport Card from '../../Components/Card/Card';\r\nimport Title from '../../Components/Title/Title';\r\n\r\nconst Saved = (props) => {\r\n    const [savedBooks, setSavedBooks] = useState([]);\r\n    useEffect(()=> {\r\n        getSavedBooks()\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setSavedBooks(res.data);\r\n        })\r\n    }, [])\r\n\r\n    const handleDelete = (e) => {\r\n        const id = e.target.getAttribute('data-id');\r\n        console.log(id);\r\n        removeSavedBook(id)\r\n        const filtered = savedBooks.filter(book =>{\r\n            return book._id !== id;\r\n        })\r\n        setSavedBooks(filtered);\r\n        console.log(filtered);\r\n    }\r\n    return(\r\n        <div>\r\n            <Nav title='Google books search'>\r\n                <div>\r\n                    <NavbarLink text='Search' link='/' />\r\n                    <NavbarLink text='Saved' link='/saved' />\r\n                </div>\r\n            </Nav>\r\n            <Title></Title>\r\n            <Container className='search-container'>\r\n                {savedBooks.length !== 0 ? savedBooks.map(book => (\r\n                    <Card handleFunction={handleDelete} btnText='Delete' id={book._id} title={book.title} authors={book.authors} img={book.image} description={book.description} link={book.link}></Card>\r\n                )) : <></>}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Search from './Pages/Search/Search';\r\nimport Saved from './Pages/Saved/Saved'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path = {['/', '/search']} component={Search} />\r\n        <Route exact path = '/saved' component={Saved} />\r\n      </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}